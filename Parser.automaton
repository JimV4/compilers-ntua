State 0:
program' -> . program [ # ]
-- On T_fun shift to state 1
-- On program shift to state 37
-- On header shift to state 38
-- On func_def shift to state 149

State 1:
header -> T_fun . T_identifier T_left_par option(header_r) T_right_par T_colon ret_type [ T_var T_semicolon T_left_br T_fun ]
-- On T_identifier shift to state 2

State 2:
header -> T_fun T_identifier . T_left_par option(header_r) T_right_par T_colon ret_type [ T_var T_semicolon T_left_br T_fun ]
-- On T_left_par shift to state 3

State 3:
header -> T_fun T_identifier T_left_par . option(header_r) T_right_par T_colon ret_type [ T_var T_semicolon T_left_br T_fun ]
-- On T_ref shift to state 4
-- On option(header_r) shift to state 5
-- On option(T_ref) shift to state 13
-- On header_r shift to state 31
-- On fpar_def shift to state 32
-- On T_right_par reduce production option(header_r) -> 
-- On T_identifier reduce production option(T_ref) -> 

State 4:
option(T_ref) -> T_ref . [ T_identifier ]
-- On T_identifier reduce production option(T_ref) -> T_ref 

State 5:
header -> T_fun T_identifier T_left_par option(header_r) . T_right_par T_colon ret_type [ T_var T_semicolon T_left_br T_fun ]
-- On T_right_par shift to state 6

State 6:
header -> T_fun T_identifier T_left_par option(header_r) T_right_par . T_colon ret_type [ T_var T_semicolon T_left_br T_fun ]
-- On T_colon shift to state 7

State 7:
header -> T_fun T_identifier T_left_par option(header_r) T_right_par T_colon . ret_type [ T_var T_semicolon T_left_br T_fun ]
-- On T_nothing shift to state 8
-- On T_int shift to state 9
-- On T_char shift to state 10
-- On ret_type shift to state 11
-- On data_type shift to state 12

State 8:
ret_type -> T_nothing . [ T_var T_semicolon T_left_br T_fun ]
-- On T_var reduce production ret_type -> T_nothing 
-- On T_semicolon reduce production ret_type -> T_nothing 
-- On T_left_br reduce production ret_type -> T_nothing 
-- On T_fun reduce production ret_type -> T_nothing 

State 9:
data_type -> T_int . [ T_var T_semicolon T_right_par T_left_sqr T_left_br T_fun ]
-- On T_var reduce production data_type -> T_int 
-- On T_semicolon reduce production data_type -> T_int 
-- On T_right_par reduce production data_type -> T_int 
-- On T_left_sqr reduce production data_type -> T_int 
-- On T_left_br reduce production data_type -> T_int 
-- On T_fun reduce production data_type -> T_int 

State 10:
data_type -> T_char . [ T_var T_semicolon T_right_par T_left_sqr T_left_br T_fun ]
-- On T_var reduce production data_type -> T_char 
-- On T_semicolon reduce production data_type -> T_char 
-- On T_right_par reduce production data_type -> T_char 
-- On T_left_sqr reduce production data_type -> T_char 
-- On T_left_br reduce production data_type -> T_char 
-- On T_fun reduce production data_type -> T_char 

State 11:
header -> T_fun T_identifier T_left_par option(header_r) T_right_par T_colon ret_type . [ T_var T_semicolon T_left_br T_fun ]
-- On T_var reduce production header -> T_fun T_identifier T_left_par option(header_r) T_right_par T_colon ret_type 
-- On T_semicolon reduce production header -> T_fun T_identifier T_left_par option(header_r) T_right_par T_colon ret_type 
-- On T_left_br reduce production header -> T_fun T_identifier T_left_par option(header_r) T_right_par T_colon ret_type 
-- On T_fun reduce production header -> T_fun T_identifier T_left_par option(header_r) T_right_par T_colon ret_type 

State 12:
ret_type -> data_type . [ T_var T_semicolon T_left_br T_fun ]
-- On T_var reduce production ret_type -> data_type 
-- On T_semicolon reduce production ret_type -> data_type 
-- On T_left_br reduce production ret_type -> data_type 
-- On T_fun reduce production ret_type -> data_type 

State 13:
fpar_def -> option(T_ref) . T_identifier fpar_def_r T_colon fpar_type [ T_semicolon T_right_par ]
-- On T_identifier shift to state 14

State 14:
fpar_def -> option(T_ref) T_identifier . fpar_def_r T_colon fpar_type [ T_semicolon T_right_par ]
-- On T_comma shift to state 15
-- On fpar_def_r shift to state 18
-- On T_colon reduce production fpar_def_r -> 

State 15:
fpar_def_r -> T_comma . T_identifier fpar_def_r [ T_colon ]
-- On T_identifier shift to state 16

State 16:
fpar_def_r -> T_comma T_identifier . fpar_def_r [ T_colon ]
-- On T_comma shift to state 15
-- On fpar_def_r shift to state 17
-- On T_colon reduce production fpar_def_r -> 

State 17:
fpar_def_r -> T_comma T_identifier fpar_def_r . [ T_colon ]
-- On T_colon reduce production fpar_def_r -> T_comma T_identifier fpar_def_r 

State 18:
fpar_def -> option(T_ref) T_identifier fpar_def_r . T_colon fpar_type [ T_semicolon T_right_par ]
-- On T_colon shift to state 19

State 19:
fpar_def -> option(T_ref) T_identifier fpar_def_r T_colon . fpar_type [ T_semicolon T_right_par ]
-- On T_int shift to state 9
-- On T_char shift to state 10
-- On fpar_type shift to state 20
-- On data_type shift to state 21

State 20:
fpar_def -> option(T_ref) T_identifier fpar_def_r T_colon fpar_type . [ T_semicolon T_right_par ]
-- On T_semicolon reduce production fpar_def -> option(T_ref) T_identifier fpar_def_r T_colon fpar_type 
-- On T_right_par reduce production fpar_def -> option(T_ref) T_identifier fpar_def_r T_colon fpar_type 

State 21:
fpar_type -> data_type . option(squares) fpar_type_r [ T_semicolon T_right_par ]
-- On T_left_sqr shift to state 22
-- On squares shift to state 24
-- On option(squares) shift to state 25
-- On T_semicolon reduce production option(squares) -> 
-- On T_right_par reduce production option(squares) -> 
-- On T_left_sqr reduce production option(squares) -> 
** Conflict on T_left_sqr

State 22:
squares -> T_left_sqr . T_right_sqr [ T_semicolon T_right_par T_left_sqr ]
-- On T_right_sqr shift to state 23

State 23:
squares -> T_left_sqr T_right_sqr . [ T_semicolon T_right_par T_left_sqr ]
-- On T_semicolon reduce production squares -> T_left_sqr T_right_sqr 
-- On T_right_par reduce production squares -> T_left_sqr T_right_sqr 
-- On T_left_sqr reduce production squares -> T_left_sqr T_right_sqr 

State 24:
option(squares) -> squares . [ T_semicolon T_right_par T_left_sqr ]
-- On T_semicolon reduce production option(squares) -> squares 
-- On T_right_par reduce production option(squares) -> squares 
-- On T_left_sqr reduce production option(squares) -> squares 

State 25:
fpar_type -> data_type option(squares) . fpar_type_r [ T_semicolon T_right_par ]
-- On T_left_sqr shift to state 26
-- On fpar_type_r shift to state 30
-- On T_semicolon reduce production fpar_type_r -> 
-- On T_right_par reduce production fpar_type_r -> 

State 26:
fpar_type_r -> T_left_sqr . T_integer T_right_sqr fpar_type_r [ T_semicolon T_right_par ]
-- On T_integer shift to state 27

State 27:
fpar_type_r -> T_left_sqr T_integer . T_right_sqr fpar_type_r [ T_semicolon T_right_par ]
-- On T_right_sqr shift to state 28

State 28:
fpar_type_r -> T_left_sqr T_integer T_right_sqr . fpar_type_r [ T_semicolon T_right_par ]
-- On T_left_sqr shift to state 26
-- On fpar_type_r shift to state 29
-- On T_semicolon reduce production fpar_type_r -> 
-- On T_right_par reduce production fpar_type_r -> 

State 29:
fpar_type_r -> T_left_sqr T_integer T_right_sqr fpar_type_r . [ T_semicolon T_right_par ]
-- On T_semicolon reduce production fpar_type_r -> T_left_sqr T_integer T_right_sqr fpar_type_r 
-- On T_right_par reduce production fpar_type_r -> T_left_sqr T_integer T_right_sqr fpar_type_r 

State 30:
fpar_type -> data_type option(squares) fpar_type_r . [ T_semicolon T_right_par ]
-- On T_semicolon reduce production fpar_type -> data_type option(squares) fpar_type_r 
-- On T_right_par reduce production fpar_type -> data_type option(squares) fpar_type_r 

State 31:
option(header_r) -> header_r . [ T_right_par ]
-- On T_right_par reduce production option(header_r) -> header_r 

State 32:
header_r -> fpar_def . header_rr [ T_right_par ]
-- On T_semicolon shift to state 33
-- On header_rr shift to state 36
-- On T_right_par reduce production header_rr -> 

State 33:
header_rr -> T_semicolon . fpar_def header_rr [ T_right_par ]
-- On T_ref shift to state 4
-- On option(T_ref) shift to state 13
-- On fpar_def shift to state 34
-- On T_identifier reduce production option(T_ref) -> 

State 34:
header_rr -> T_semicolon fpar_def . header_rr [ T_right_par ]
-- On T_semicolon shift to state 33
-- On header_rr shift to state 35
-- On T_right_par reduce production header_rr -> 

State 35:
header_rr -> T_semicolon fpar_def header_rr . [ T_right_par ]
-- On T_right_par reduce production header_rr -> T_semicolon fpar_def header_rr 

State 36:
header_r -> fpar_def header_rr . [ T_right_par ]
-- On T_right_par reduce production header_r -> fpar_def header_rr 

State 37:
program' -> program . [ # ]
-- On # accept program

State 38:
func_def -> header . list(local_def) block [ T_eof ]
-- On T_var shift to state 39
-- On T_fun shift to state 1
-- On var_def shift to state 54
-- On local_def shift to state 55
-- On list(local_def) shift to state 59
-- On header shift to state 57
-- On func_def shift to state 147
-- On func_decl shift to state 148
-- On T_left_br reduce production list(local_def) -> 

State 39:
var_def -> T_var . T_identifier var_def_r T_colon mytype T_semicolon [ T_var T_left_br T_fun ]
-- On T_identifier shift to state 40

State 40:
var_def -> T_var T_identifier . var_def_r T_colon mytype T_semicolon [ T_var T_left_br T_fun ]
-- On T_comma shift to state 41
-- On var_def_r shift to state 44
-- On T_colon reduce production var_def_r -> 

State 41:
var_def_r -> T_comma . T_identifier var_def_r [ T_colon ]
-- On T_identifier shift to state 42

State 42:
var_def_r -> T_comma T_identifier . var_def_r [ T_colon ]
-- On T_comma shift to state 41
-- On var_def_r shift to state 43
-- On T_colon reduce production var_def_r -> 

State 43:
var_def_r -> T_comma T_identifier var_def_r . [ T_colon ]
-- On T_colon reduce production var_def_r -> T_comma T_identifier var_def_r 

State 44:
var_def -> T_var T_identifier var_def_r . T_colon mytype T_semicolon [ T_var T_left_br T_fun ]
-- On T_colon shift to state 45

State 45:
var_def -> T_var T_identifier var_def_r T_colon . mytype T_semicolon [ T_var T_left_br T_fun ]
-- On T_int shift to state 9
-- On T_char shift to state 10
-- On mytype shift to state 46
-- On data_type shift to state 48

State 46:
var_def -> T_var T_identifier var_def_r T_colon mytype . T_semicolon [ T_var T_left_br T_fun ]
-- On T_semicolon shift to state 47

State 47:
var_def -> T_var T_identifier var_def_r T_colon mytype T_semicolon . [ T_var T_left_br T_fun ]
-- On T_var reduce production var_def -> T_var T_identifier var_def_r T_colon mytype T_semicolon 
-- On T_left_br reduce production var_def -> T_var T_identifier var_def_r T_colon mytype T_semicolon 
-- On T_fun reduce production var_def -> T_var T_identifier var_def_r T_colon mytype T_semicolon 

State 48:
mytype -> data_type . mytype_r [ T_semicolon ]
-- On T_left_sqr shift to state 49
-- On mytype_r shift to state 53
-- On T_semicolon reduce production mytype_r -> 

State 49:
mytype_r -> T_left_sqr . T_integer T_right_sqr mytype_r [ T_semicolon ]
-- On T_integer shift to state 50

State 50:
mytype_r -> T_left_sqr T_integer . T_right_sqr mytype_r [ T_semicolon ]
-- On T_right_sqr shift to state 51

State 51:
mytype_r -> T_left_sqr T_integer T_right_sqr . mytype_r [ T_semicolon ]
-- On T_left_sqr shift to state 49
-- On mytype_r shift to state 52
-- On T_semicolon reduce production mytype_r -> 

State 52:
mytype_r -> T_left_sqr T_integer T_right_sqr mytype_r . [ T_semicolon ]
-- On T_semicolon reduce production mytype_r -> T_left_sqr T_integer T_right_sqr mytype_r 

State 53:
mytype -> data_type mytype_r . [ T_semicolon ]
-- On T_semicolon reduce production mytype -> data_type mytype_r 

State 54:
local_def -> var_def . [ T_var T_left_br T_fun ]
-- On T_var reduce production local_def -> var_def 
-- On T_left_br reduce production local_def -> var_def 
-- On T_fun reduce production local_def -> var_def 

State 55:
list(local_def) -> local_def . list(local_def) [ T_left_br ]
-- On T_var shift to state 39
-- On T_fun shift to state 1
-- On var_def shift to state 54
-- On local_def shift to state 55
-- On list(local_def) shift to state 56
-- On header shift to state 57
-- On func_def shift to state 147
-- On func_decl shift to state 148
-- On T_left_br reduce production list(local_def) -> 

State 56:
list(local_def) -> local_def list(local_def) . [ T_left_br ]
-- On T_left_br reduce production list(local_def) -> local_def list(local_def) 

State 57:
func_decl -> header . T_semicolon [ T_var T_left_br T_fun ]
func_def -> header . list(local_def) block [ T_var T_left_br T_fun ]
-- On T_var shift to state 39
-- On T_semicolon shift to state 58
-- On T_fun shift to state 1
-- On var_def shift to state 54
-- On local_def shift to state 55
-- On list(local_def) shift to state 59
-- On header shift to state 57
-- On func_def shift to state 147
-- On func_decl shift to state 148
-- On T_left_br reduce production list(local_def) -> 

State 58:
func_decl -> header T_semicolon . [ T_var T_left_br T_fun ]
-- On T_var reduce production func_decl -> header T_semicolon 
-- On T_left_br reduce production func_decl -> header T_semicolon 
-- On T_fun reduce production func_decl -> header T_semicolon 

State 59:
func_def -> header list(local_def) . block [ T_var T_left_br T_fun T_eof ]
-- On T_left_br shift to state 60
-- On block shift to state 146

State 60:
block -> T_left_br . list(stmt) T_right_br [ T_while T_var T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier T_fun T_eof ]
-- On T_while shift to state 61
-- On T_string shift to state 62
-- On T_semicolon shift to state 122
-- On T_return shift to state 123
-- On T_left_br shift to state 60
-- On T_if shift to state 127
-- On T_identifier shift to state 67
-- On stmt shift to state 142
-- On list(stmt) shift to state 144
-- On l_value shift to state 132
-- On func_call shift to state 136
-- On block shift to state 138
-- On T_right_br reduce production list(stmt) -> 

State 61:
stmt -> T_while . cond T_do stmt [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_not shift to state 97
-- On T_minus shift to state 64
-- On T_left_par shift to state 98
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 115
-- On cond shift to state 120

State 62:
l_value -> T_string . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_left_sqr T_greater_eq T_greater T_equal T_do T_div T_comma T_assignment T_and ]
-- On T_then reduce production l_value -> T_string 
-- On T_semicolon reduce production l_value -> T_string 
-- On T_right_sqr reduce production l_value -> T_string 
-- On T_right_par reduce production l_value -> T_string 
-- On T_plus reduce production l_value -> T_string 
-- On T_or reduce production l_value -> T_string 
-- On T_not_equal reduce production l_value -> T_string 
-- On T_mul reduce production l_value -> T_string 
-- On T_mod reduce production l_value -> T_string 
-- On T_minus reduce production l_value -> T_string 
-- On T_less_eq reduce production l_value -> T_string 
-- On T_less reduce production l_value -> T_string 
-- On T_left_sqr reduce production l_value -> T_string 
-- On T_greater_eq reduce production l_value -> T_string 
-- On T_greater reduce production l_value -> T_string 
-- On T_equal reduce production l_value -> T_string 
-- On T_do reduce production l_value -> T_string 
-- On T_div reduce production l_value -> T_string 
-- On T_comma reduce production l_value -> T_string 
-- On T_assignment reduce production l_value -> T_string 
-- On T_and reduce production l_value -> T_string 

State 63:
expr -> T_plus . expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 96

State 64:
expr -> T_minus . expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 95

State 65:
expr -> T_left_par . expr T_right_par [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 93

State 66:
expr -> T_integer . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production expr -> T_integer 
-- On T_semicolon reduce production expr -> T_integer 
-- On T_right_sqr reduce production expr -> T_integer 
-- On T_right_par reduce production expr -> T_integer 
-- On T_plus reduce production expr -> T_integer 
-- On T_or reduce production expr -> T_integer 
-- On T_not_equal reduce production expr -> T_integer 
-- On T_mul reduce production expr -> T_integer 
-- On T_mod reduce production expr -> T_integer 
-- On T_minus reduce production expr -> T_integer 
-- On T_less_eq reduce production expr -> T_integer 
-- On T_less reduce production expr -> T_integer 
-- On T_greater_eq reduce production expr -> T_integer 
-- On T_greater reduce production expr -> T_integer 
-- On T_equal reduce production expr -> T_integer 
-- On T_do reduce production expr -> T_integer 
-- On T_div reduce production expr -> T_integer 
-- On T_comma reduce production expr -> T_integer 
-- On T_and reduce production expr -> T_integer 

State 67:
func_call -> T_identifier . T_left_par option(func_call_rr) T_right_par [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
l_value -> T_identifier . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_left_sqr T_greater_eq T_greater T_equal T_do T_div T_comma T_assignment T_and ]
-- On T_left_par shift to state 68
-- On T_then reduce production l_value -> T_identifier 
-- On T_semicolon reduce production l_value -> T_identifier 
-- On T_right_sqr reduce production l_value -> T_identifier 
-- On T_right_par reduce production l_value -> T_identifier 
-- On T_plus reduce production l_value -> T_identifier 
-- On T_or reduce production l_value -> T_identifier 
-- On T_not_equal reduce production l_value -> T_identifier 
-- On T_mul reduce production l_value -> T_identifier 
-- On T_mod reduce production l_value -> T_identifier 
-- On T_minus reduce production l_value -> T_identifier 
-- On T_less_eq reduce production l_value -> T_identifier 
-- On T_less reduce production l_value -> T_identifier 
-- On T_left_sqr reduce production l_value -> T_identifier 
-- On T_greater_eq reduce production l_value -> T_identifier 
-- On T_greater reduce production l_value -> T_identifier 
-- On T_equal reduce production l_value -> T_identifier 
-- On T_do reduce production l_value -> T_identifier 
-- On T_div reduce production l_value -> T_identifier 
-- On T_comma reduce production l_value -> T_identifier 
-- On T_assignment reduce production l_value -> T_identifier 
-- On T_and reduce production l_value -> T_identifier 

State 68:
func_call -> T_identifier T_left_par . option(func_call_rr) T_right_par [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On option(func_call_rr) shift to state 70
-- On l_value shift to state 72
-- On func_call_rr shift to state 87
-- On func_call shift to state 74
-- On expr shift to state 88
-- On T_right_par reduce production option(func_call_rr) -> 

State 69:
expr -> T_chr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production expr -> T_chr 
-- On T_semicolon reduce production expr -> T_chr 
-- On T_right_sqr reduce production expr -> T_chr 
-- On T_right_par reduce production expr -> T_chr 
-- On T_plus reduce production expr -> T_chr 
-- On T_or reduce production expr -> T_chr 
-- On T_not_equal reduce production expr -> T_chr 
-- On T_mul reduce production expr -> T_chr 
-- On T_mod reduce production expr -> T_chr 
-- On T_minus reduce production expr -> T_chr 
-- On T_less_eq reduce production expr -> T_chr 
-- On T_less reduce production expr -> T_chr 
-- On T_greater_eq reduce production expr -> T_chr 
-- On T_greater reduce production expr -> T_chr 
-- On T_equal reduce production expr -> T_chr 
-- On T_do reduce production expr -> T_chr 
-- On T_div reduce production expr -> T_chr 
-- On T_comma reduce production expr -> T_chr 
-- On T_and reduce production expr -> T_chr 

State 70:
func_call -> T_identifier T_left_par option(func_call_rr) . T_right_par [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_right_par shift to state 71

State 71:
func_call -> T_identifier T_left_par option(func_call_rr) T_right_par . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_semicolon reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_right_sqr reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_right_par reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_plus reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_or reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_not_equal reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_mul reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_mod reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_minus reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_less_eq reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_less reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_greater_eq reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_greater reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_equal reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_do reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_div reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_comma reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 
-- On T_and reduce production func_call -> T_identifier T_left_par option(func_call_rr) T_right_par 

State 72:
expr -> l_value . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
l_value -> l_value . T_left_sqr expr T_right_sqr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_left_sqr T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_left_sqr shift to state 73
-- On T_then reduce production expr -> l_value 
-- On T_semicolon reduce production expr -> l_value 
-- On T_right_sqr reduce production expr -> l_value 
-- On T_right_par reduce production expr -> l_value 
-- On T_plus reduce production expr -> l_value 
-- On T_or reduce production expr -> l_value 
-- On T_not_equal reduce production expr -> l_value 
-- On T_mul reduce production expr -> l_value 
-- On T_mod reduce production expr -> l_value 
-- On T_minus reduce production expr -> l_value 
-- On T_less_eq reduce production expr -> l_value 
-- On T_less reduce production expr -> l_value 
-- On T_greater_eq reduce production expr -> l_value 
-- On T_greater reduce production expr -> l_value 
-- On T_equal reduce production expr -> l_value 
-- On T_do reduce production expr -> l_value 
-- On T_div reduce production expr -> l_value 
-- On T_comma reduce production expr -> l_value 
-- On T_and reduce production expr -> l_value 

State 73:
l_value -> l_value T_left_sqr . expr T_right_sqr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_left_sqr T_greater_eq T_greater T_equal T_do T_div T_comma T_assignment T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 75

State 74:
expr -> func_call . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production expr -> func_call 
-- On T_semicolon reduce production expr -> func_call 
-- On T_right_sqr reduce production expr -> func_call 
-- On T_right_par reduce production expr -> func_call 
-- On T_plus reduce production expr -> func_call 
-- On T_or reduce production expr -> func_call 
-- On T_not_equal reduce production expr -> func_call 
-- On T_mul reduce production expr -> func_call 
-- On T_mod reduce production expr -> func_call 
-- On T_minus reduce production expr -> func_call 
-- On T_less_eq reduce production expr -> func_call 
-- On T_less reduce production expr -> func_call 
-- On T_greater_eq reduce production expr -> func_call 
-- On T_greater reduce production expr -> func_call 
-- On T_equal reduce production expr -> func_call 
-- On T_do reduce production expr -> func_call 
-- On T_div reduce production expr -> func_call 
-- On T_comma reduce production expr -> func_call 
-- On T_and reduce production expr -> func_call 

State 75:
expr -> expr . T_plus expr [ T_right_sqr T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_right_sqr T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_right_sqr T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_right_sqr T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_right_sqr T_plus T_mul T_mod T_minus T_div ]
l_value -> l_value T_left_sqr expr . T_right_sqr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_left_sqr T_greater_eq T_greater T_equal T_do T_div T_comma T_assignment T_and ]
-- On T_right_sqr shift to state 76
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83

State 76:
l_value -> l_value T_left_sqr expr T_right_sqr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_left_sqr T_greater_eq T_greater T_equal T_do T_div T_comma T_assignment T_and ]
-- On T_then reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_semicolon reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_right_sqr reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_right_par reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_plus reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_or reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_not_equal reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_mul reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_mod reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_minus reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_less_eq reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_less reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_left_sqr reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_greater_eq reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_greater reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_equal reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_do reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_div reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_comma reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_assignment reduce production l_value -> l_value T_left_sqr expr T_right_sqr 
-- On T_and reduce production l_value -> l_value T_left_sqr expr T_right_sqr 

State 77:
expr -> expr T_plus . expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 78

State 78:
expr -> expr . T_plus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr T_plus expr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_minus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mul expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_div expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mod expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_div shift to state 83
-- On T_then reduce production expr -> expr T_plus expr 
-- On T_semicolon reduce production expr -> expr T_plus expr 
-- On T_right_sqr reduce production expr -> expr T_plus expr 
-- On T_right_par reduce production expr -> expr T_plus expr 
-- On T_plus reduce production expr -> expr T_plus expr 
-- On T_or reduce production expr -> expr T_plus expr 
-- On T_not_equal reduce production expr -> expr T_plus expr 
-- On T_minus reduce production expr -> expr T_plus expr 
-- On T_less_eq reduce production expr -> expr T_plus expr 
-- On T_less reduce production expr -> expr T_plus expr 
-- On T_greater_eq reduce production expr -> expr T_plus expr 
-- On T_greater reduce production expr -> expr T_plus expr 
-- On T_equal reduce production expr -> expr T_plus expr 
-- On T_do reduce production expr -> expr T_plus expr 
-- On T_comma reduce production expr -> expr T_plus expr 
-- On T_and reduce production expr -> expr T_plus expr 

State 79:
expr -> expr T_mul . expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 80

State 80:
expr -> expr . T_plus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_minus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mul expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr T_mul expr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_div expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mod expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production expr -> expr T_mul expr 
-- On T_semicolon reduce production expr -> expr T_mul expr 
-- On T_right_sqr reduce production expr -> expr T_mul expr 
-- On T_right_par reduce production expr -> expr T_mul expr 
-- On T_plus reduce production expr -> expr T_mul expr 
-- On T_or reduce production expr -> expr T_mul expr 
-- On T_not_equal reduce production expr -> expr T_mul expr 
-- On T_mul reduce production expr -> expr T_mul expr 
-- On T_mod reduce production expr -> expr T_mul expr 
-- On T_minus reduce production expr -> expr T_mul expr 
-- On T_less_eq reduce production expr -> expr T_mul expr 
-- On T_less reduce production expr -> expr T_mul expr 
-- On T_greater_eq reduce production expr -> expr T_mul expr 
-- On T_greater reduce production expr -> expr T_mul expr 
-- On T_equal reduce production expr -> expr T_mul expr 
-- On T_do reduce production expr -> expr T_mul expr 
-- On T_div reduce production expr -> expr T_mul expr 
-- On T_comma reduce production expr -> expr T_mul expr 
-- On T_and reduce production expr -> expr T_mul expr 

State 81:
expr -> expr T_mod . expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 82

State 82:
expr -> expr . T_plus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_minus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mul expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_div expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mod expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr T_mod expr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production expr -> expr T_mod expr 
-- On T_semicolon reduce production expr -> expr T_mod expr 
-- On T_right_sqr reduce production expr -> expr T_mod expr 
-- On T_right_par reduce production expr -> expr T_mod expr 
-- On T_plus reduce production expr -> expr T_mod expr 
-- On T_or reduce production expr -> expr T_mod expr 
-- On T_not_equal reduce production expr -> expr T_mod expr 
-- On T_mul reduce production expr -> expr T_mod expr 
-- On T_mod reduce production expr -> expr T_mod expr 
-- On T_minus reduce production expr -> expr T_mod expr 
-- On T_less_eq reduce production expr -> expr T_mod expr 
-- On T_less reduce production expr -> expr T_mod expr 
-- On T_greater_eq reduce production expr -> expr T_mod expr 
-- On T_greater reduce production expr -> expr T_mod expr 
-- On T_equal reduce production expr -> expr T_mod expr 
-- On T_do reduce production expr -> expr T_mod expr 
-- On T_div reduce production expr -> expr T_mod expr 
-- On T_comma reduce production expr -> expr T_mod expr 
-- On T_and reduce production expr -> expr T_mod expr 

State 83:
expr -> expr T_div . expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 84

State 84:
expr -> expr . T_plus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_minus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mul expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_div expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr T_div expr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mod expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production expr -> expr T_div expr 
-- On T_semicolon reduce production expr -> expr T_div expr 
-- On T_right_sqr reduce production expr -> expr T_div expr 
-- On T_right_par reduce production expr -> expr T_div expr 
-- On T_plus reduce production expr -> expr T_div expr 
-- On T_or reduce production expr -> expr T_div expr 
-- On T_not_equal reduce production expr -> expr T_div expr 
-- On T_mul reduce production expr -> expr T_div expr 
-- On T_mod reduce production expr -> expr T_div expr 
-- On T_minus reduce production expr -> expr T_div expr 
-- On T_less_eq reduce production expr -> expr T_div expr 
-- On T_less reduce production expr -> expr T_div expr 
-- On T_greater_eq reduce production expr -> expr T_div expr 
-- On T_greater reduce production expr -> expr T_div expr 
-- On T_equal reduce production expr -> expr T_div expr 
-- On T_do reduce production expr -> expr T_div expr 
-- On T_div reduce production expr -> expr T_div expr 
-- On T_comma reduce production expr -> expr T_div expr 
-- On T_and reduce production expr -> expr T_div expr 

State 85:
expr -> expr T_minus . expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 86

State 86:
expr -> expr . T_plus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_minus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr T_minus expr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mul expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_div expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mod expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_div shift to state 83
-- On T_then reduce production expr -> expr T_minus expr 
-- On T_semicolon reduce production expr -> expr T_minus expr 
-- On T_right_sqr reduce production expr -> expr T_minus expr 
-- On T_right_par reduce production expr -> expr T_minus expr 
-- On T_plus reduce production expr -> expr T_minus expr 
-- On T_or reduce production expr -> expr T_minus expr 
-- On T_not_equal reduce production expr -> expr T_minus expr 
-- On T_minus reduce production expr -> expr T_minus expr 
-- On T_less_eq reduce production expr -> expr T_minus expr 
-- On T_less reduce production expr -> expr T_minus expr 
-- On T_greater_eq reduce production expr -> expr T_minus expr 
-- On T_greater reduce production expr -> expr T_minus expr 
-- On T_equal reduce production expr -> expr T_minus expr 
-- On T_do reduce production expr -> expr T_minus expr 
-- On T_comma reduce production expr -> expr T_minus expr 
-- On T_and reduce production expr -> expr T_minus expr 

State 87:
option(func_call_rr) -> func_call_rr . [ T_right_par ]
-- On T_right_par reduce production option(func_call_rr) -> func_call_rr 

State 88:
expr -> expr . T_plus expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_minus expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_mul expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_div expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_mod expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
func_call_rr -> expr . func_call_r [ T_right_par ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_comma shift to state 89
-- On func_call_r shift to state 92
-- On T_right_par reduce production func_call_r -> 

State 89:
func_call_r -> T_comma . expr func_call_r [ T_right_par ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 90

State 90:
expr -> expr . T_plus expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_minus expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_mul expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_div expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
expr -> expr . T_mod expr [ T_right_par T_plus T_mul T_mod T_minus T_div T_comma ]
func_call_r -> T_comma expr . func_call_r [ T_right_par ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_comma shift to state 89
-- On func_call_r shift to state 91
-- On T_right_par reduce production func_call_r -> 

State 91:
func_call_r -> T_comma expr func_call_r . [ T_right_par ]
-- On T_right_par reduce production func_call_r -> T_comma expr func_call_r 

State 92:
func_call_rr -> expr func_call_r . [ T_right_par ]
-- On T_right_par reduce production func_call_rr -> expr func_call_r 

State 93:
expr -> T_left_par expr . T_right_par [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_plus expr [ T_right_par T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_right_par T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_right_par T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_right_par T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_right_par T_plus T_mul T_mod T_minus T_div ]
-- On T_right_par shift to state 94
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83

State 94:
expr -> T_left_par expr T_right_par . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_then reduce production expr -> T_left_par expr T_right_par 
-- On T_semicolon reduce production expr -> T_left_par expr T_right_par 
-- On T_right_sqr reduce production expr -> T_left_par expr T_right_par 
-- On T_right_par reduce production expr -> T_left_par expr T_right_par 
-- On T_plus reduce production expr -> T_left_par expr T_right_par 
-- On T_or reduce production expr -> T_left_par expr T_right_par 
-- On T_not_equal reduce production expr -> T_left_par expr T_right_par 
-- On T_mul reduce production expr -> T_left_par expr T_right_par 
-- On T_mod reduce production expr -> T_left_par expr T_right_par 
-- On T_minus reduce production expr -> T_left_par expr T_right_par 
-- On T_less_eq reduce production expr -> T_left_par expr T_right_par 
-- On T_less reduce production expr -> T_left_par expr T_right_par 
-- On T_greater_eq reduce production expr -> T_left_par expr T_right_par 
-- On T_greater reduce production expr -> T_left_par expr T_right_par 
-- On T_equal reduce production expr -> T_left_par expr T_right_par 
-- On T_do reduce production expr -> T_left_par expr T_right_par 
-- On T_div reduce production expr -> T_left_par expr T_right_par 
-- On T_comma reduce production expr -> T_left_par expr T_right_par 
-- On T_and reduce production expr -> T_left_par expr T_right_par 

State 95:
expr -> T_minus expr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_plus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_minus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mul expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_div expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mod expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_div shift to state 83
-- On T_then reduce production expr -> T_minus expr 
-- On T_semicolon reduce production expr -> T_minus expr 
-- On T_right_sqr reduce production expr -> T_minus expr 
-- On T_right_par reduce production expr -> T_minus expr 
-- On T_plus reduce production expr -> T_minus expr 
-- On T_or reduce production expr -> T_minus expr 
-- On T_not_equal reduce production expr -> T_minus expr 
-- On T_minus reduce production expr -> T_minus expr 
-- On T_less_eq reduce production expr -> T_minus expr 
-- On T_less reduce production expr -> T_minus expr 
-- On T_greater_eq reduce production expr -> T_minus expr 
-- On T_greater reduce production expr -> T_minus expr 
-- On T_equal reduce production expr -> T_minus expr 
-- On T_do reduce production expr -> T_minus expr 
-- On T_comma reduce production expr -> T_minus expr 
-- On T_and reduce production expr -> T_minus expr 

State 96:
expr -> T_plus expr . [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_plus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_minus expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mul expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_div expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
expr -> expr . T_mod expr [ T_then T_semicolon T_right_sqr T_right_par T_plus T_or T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_do T_div T_comma T_and ]
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_div shift to state 83
-- On T_then reduce production expr -> T_plus expr 
-- On T_semicolon reduce production expr -> T_plus expr 
-- On T_right_sqr reduce production expr -> T_plus expr 
-- On T_right_par reduce production expr -> T_plus expr 
-- On T_plus reduce production expr -> T_plus expr 
-- On T_or reduce production expr -> T_plus expr 
-- On T_not_equal reduce production expr -> T_plus expr 
-- On T_minus reduce production expr -> T_plus expr 
-- On T_less_eq reduce production expr -> T_plus expr 
-- On T_less reduce production expr -> T_plus expr 
-- On T_greater_eq reduce production expr -> T_plus expr 
-- On T_greater reduce production expr -> T_plus expr 
-- On T_equal reduce production expr -> T_plus expr 
-- On T_do reduce production expr -> T_plus expr 
-- On T_comma reduce production expr -> T_plus expr 
-- On T_and reduce production expr -> T_plus expr 

State 97:
cond -> T_not . cond [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_not shift to state 97
-- On T_minus shift to state 64
-- On T_left_par shift to state 98
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 115
-- On cond shift to state 119

State 98:
cond -> T_left_par . cond T_right_par [ T_then T_right_par T_or T_do T_and ]
expr -> T_left_par . expr T_right_par [ T_right_par T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_not shift to state 97
-- On T_minus shift to state 64
-- On T_left_par shift to state 98
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 99
-- On cond shift to state 112

State 99:
cond -> expr . T_equal expr [ T_right_par T_or T_and ]
cond -> expr . T_less expr [ T_right_par T_or T_and ]
cond -> expr . T_less_eq expr [ T_right_par T_or T_and ]
cond -> expr . T_greater expr [ T_right_par T_or T_and ]
cond -> expr . T_greater_eq expr [ T_right_par T_or T_and ]
cond -> expr . T_not_equal expr [ T_right_par T_or T_and ]
expr -> T_left_par expr . T_right_par [ T_right_par T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_plus expr [ T_right_par T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_minus expr [ T_right_par T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_mul expr [ T_right_par T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_div expr [ T_right_par T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_mod expr [ T_right_par T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
-- On T_right_par shift to state 94
-- On T_plus shift to state 77
-- On T_not_equal shift to state 100
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_less_eq shift to state 102
-- On T_less shift to state 104
-- On T_greater_eq shift to state 106
-- On T_greater shift to state 108
-- On T_equal shift to state 110
-- On T_div shift to state 83

State 100:
cond -> expr T_not_equal . expr [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 101

State 101:
cond -> expr T_not_equal expr . [ T_then T_right_par T_or T_do T_and ]
expr -> expr . T_plus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_minus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mul expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_div expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mod expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_then reduce production cond -> expr T_not_equal expr 
-- On T_right_par reduce production cond -> expr T_not_equal expr 
-- On T_or reduce production cond -> expr T_not_equal expr 
-- On T_do reduce production cond -> expr T_not_equal expr 
-- On T_and reduce production cond -> expr T_not_equal expr 

State 102:
cond -> expr T_less_eq . expr [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 103

State 103:
cond -> expr T_less_eq expr . [ T_then T_right_par T_or T_do T_and ]
expr -> expr . T_plus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_minus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mul expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_div expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mod expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_then reduce production cond -> expr T_less_eq expr 
-- On T_right_par reduce production cond -> expr T_less_eq expr 
-- On T_or reduce production cond -> expr T_less_eq expr 
-- On T_do reduce production cond -> expr T_less_eq expr 
-- On T_and reduce production cond -> expr T_less_eq expr 

State 104:
cond -> expr T_less . expr [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 105

State 105:
cond -> expr T_less expr . [ T_then T_right_par T_or T_do T_and ]
expr -> expr . T_plus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_minus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mul expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_div expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mod expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_then reduce production cond -> expr T_less expr 
-- On T_right_par reduce production cond -> expr T_less expr 
-- On T_or reduce production cond -> expr T_less expr 
-- On T_do reduce production cond -> expr T_less expr 
-- On T_and reduce production cond -> expr T_less expr 

State 106:
cond -> expr T_greater_eq . expr [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 107

State 107:
cond -> expr T_greater_eq expr . [ T_then T_right_par T_or T_do T_and ]
expr -> expr . T_plus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_minus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mul expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_div expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mod expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_then reduce production cond -> expr T_greater_eq expr 
-- On T_right_par reduce production cond -> expr T_greater_eq expr 
-- On T_or reduce production cond -> expr T_greater_eq expr 
-- On T_do reduce production cond -> expr T_greater_eq expr 
-- On T_and reduce production cond -> expr T_greater_eq expr 

State 108:
cond -> expr T_greater . expr [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 109

State 109:
cond -> expr T_greater expr . [ T_then T_right_par T_or T_do T_and ]
expr -> expr . T_plus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_minus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mul expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_div expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mod expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_then reduce production cond -> expr T_greater expr 
-- On T_right_par reduce production cond -> expr T_greater expr 
-- On T_or reduce production cond -> expr T_greater expr 
-- On T_do reduce production cond -> expr T_greater expr 
-- On T_and reduce production cond -> expr T_greater expr 

State 110:
cond -> expr T_equal . expr [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 111

State 111:
cond -> expr T_equal expr . [ T_then T_right_par T_or T_do T_and ]
expr -> expr . T_plus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_minus expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mul expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_div expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
expr -> expr . T_mod expr [ T_then T_right_par T_plus T_or T_mul T_mod T_minus T_do T_div T_and ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_then reduce production cond -> expr T_equal expr 
-- On T_right_par reduce production cond -> expr T_equal expr 
-- On T_or reduce production cond -> expr T_equal expr 
-- On T_do reduce production cond -> expr T_equal expr 
-- On T_and reduce production cond -> expr T_equal expr 

State 112:
cond -> T_left_par cond . T_right_par [ T_then T_right_par T_or T_do T_and ]
cond -> cond . T_and cond [ T_right_par T_or T_and ]
cond -> cond . T_or cond [ T_right_par T_or T_and ]
-- On T_right_par shift to state 113
-- On T_or shift to state 114
-- On T_and shift to state 117

State 113:
cond -> T_left_par cond T_right_par . [ T_then T_right_par T_or T_do T_and ]
-- On T_then reduce production cond -> T_left_par cond T_right_par 
-- On T_right_par reduce production cond -> T_left_par cond T_right_par 
-- On T_or reduce production cond -> T_left_par cond T_right_par 
-- On T_do reduce production cond -> T_left_par cond T_right_par 
-- On T_and reduce production cond -> T_left_par cond T_right_par 

State 114:
cond -> cond T_or . cond [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_not shift to state 97
-- On T_minus shift to state 64
-- On T_left_par shift to state 98
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 115
-- On cond shift to state 116

State 115:
cond -> expr . T_equal expr [ T_then T_right_par T_or T_do T_and ]
cond -> expr . T_less expr [ T_then T_right_par T_or T_do T_and ]
cond -> expr . T_less_eq expr [ T_then T_right_par T_or T_do T_and ]
cond -> expr . T_greater expr [ T_then T_right_par T_or T_do T_and ]
cond -> expr . T_greater_eq expr [ T_then T_right_par T_or T_do T_and ]
cond -> expr . T_not_equal expr [ T_then T_right_par T_or T_do T_and ]
expr -> expr . T_plus expr [ T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_minus expr [ T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_mul expr [ T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_div expr [ T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
expr -> expr . T_mod expr [ T_plus T_not_equal T_mul T_mod T_minus T_less_eq T_less T_greater_eq T_greater T_equal T_div ]
-- On T_plus shift to state 77
-- On T_not_equal shift to state 100
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_less_eq shift to state 102
-- On T_less shift to state 104
-- On T_greater_eq shift to state 106
-- On T_greater shift to state 108
-- On T_equal shift to state 110
-- On T_div shift to state 83

State 116:
cond -> cond . T_and cond [ T_then T_right_par T_or T_do T_and ]
cond -> cond . T_or cond [ T_then T_right_par T_or T_do T_and ]
cond -> cond T_or cond . [ T_then T_right_par T_or T_do T_and ]
-- On T_and shift to state 117
-- On T_then reduce production cond -> cond T_or cond 
-- On T_right_par reduce production cond -> cond T_or cond 
-- On T_or reduce production cond -> cond T_or cond 
-- On T_do reduce production cond -> cond T_or cond 

State 117:
cond -> cond T_and . cond [ T_then T_right_par T_or T_do T_and ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_not shift to state 97
-- On T_minus shift to state 64
-- On T_left_par shift to state 98
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 115
-- On cond shift to state 118

State 118:
cond -> cond . T_and cond [ T_then T_right_par T_or T_do T_and ]
cond -> cond T_and cond . [ T_then T_right_par T_or T_do T_and ]
cond -> cond . T_or cond [ T_then T_right_par T_or T_do T_and ]
-- On T_then reduce production cond -> cond T_and cond 
-- On T_right_par reduce production cond -> cond T_and cond 
-- On T_or reduce production cond -> cond T_and cond 
-- On T_do reduce production cond -> cond T_and cond 
-- On T_and reduce production cond -> cond T_and cond 

State 119:
cond -> T_not cond . [ T_then T_right_par T_or T_do T_and ]
cond -> cond . T_and cond [ T_then T_right_par T_or T_do T_and ]
cond -> cond . T_or cond [ T_then T_right_par T_or T_do T_and ]
-- On T_or shift to state 114
-- On T_and shift to state 117
-- On T_then reduce production cond -> T_not cond 
-- On T_right_par reduce production cond -> T_not cond 
-- On T_or reduce production cond -> T_not cond 
-- On T_do reduce production cond -> T_not cond 
-- On T_and reduce production cond -> T_not cond 
** Conflict on T_or T_and

State 120:
cond -> cond . T_and cond [ T_or T_do T_and ]
cond -> cond . T_or cond [ T_or T_do T_and ]
stmt -> T_while cond . T_do stmt [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_or shift to state 114
-- On T_do shift to state 121
-- On T_and shift to state 117

State 121:
stmt -> T_while cond T_do . stmt [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while shift to state 61
-- On T_string shift to state 62
-- On T_semicolon shift to state 122
-- On T_return shift to state 123
-- On T_left_br shift to state 60
-- On T_if shift to state 127
-- On T_identifier shift to state 67
-- On stmt shift to state 141
-- On l_value shift to state 132
-- On func_call shift to state 136
-- On block shift to state 138

State 122:
stmt -> T_semicolon . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production stmt -> T_semicolon 
-- On T_string reduce production stmt -> T_semicolon 
-- On T_semicolon reduce production stmt -> T_semicolon 
-- On T_right_br reduce production stmt -> T_semicolon 
-- On T_return reduce production stmt -> T_semicolon 
-- On T_left_br reduce production stmt -> T_semicolon 
-- On T_if reduce production stmt -> T_semicolon 
-- On T_identifier reduce production stmt -> T_semicolon 

State 123:
stmt -> T_return . option(expr) T_semicolon [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On option(expr) shift to state 124
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 126
-- On T_semicolon reduce production option(expr) -> 

State 124:
stmt -> T_return option(expr) . T_semicolon [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_semicolon shift to state 125

State 125:
stmt -> T_return option(expr) T_semicolon . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production stmt -> T_return option(expr) T_semicolon 
-- On T_string reduce production stmt -> T_return option(expr) T_semicolon 
-- On T_semicolon reduce production stmt -> T_return option(expr) T_semicolon 
-- On T_right_br reduce production stmt -> T_return option(expr) T_semicolon 
-- On T_return reduce production stmt -> T_return option(expr) T_semicolon 
-- On T_left_br reduce production stmt -> T_return option(expr) T_semicolon 
-- On T_if reduce production stmt -> T_return option(expr) T_semicolon 
-- On T_identifier reduce production stmt -> T_return option(expr) T_semicolon 

State 126:
expr -> expr . T_plus expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
option(expr) -> expr . [ T_semicolon ]
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83
-- On T_semicolon reduce production option(expr) -> expr 

State 127:
stmt -> T_if . cond T_then option(else_stmt) [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_not shift to state 97
-- On T_minus shift to state 64
-- On T_left_par shift to state 98
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 115
-- On cond shift to state 128

State 128:
cond -> cond . T_and cond [ T_then T_or T_and ]
cond -> cond . T_or cond [ T_then T_or T_and ]
stmt -> T_if cond . T_then option(else_stmt) [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_then shift to state 129
-- On T_or shift to state 114
-- On T_and shift to state 117

State 129:
stmt -> T_if cond T_then . option(else_stmt) [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_else shift to state 130
-- On option(else_stmt) shift to state 139
-- On else_stmt shift to state 140
-- On T_while reduce production option(else_stmt) -> 
-- On T_string reduce production option(else_stmt) -> 
-- On T_semicolon reduce production option(else_stmt) -> 
-- On T_right_br reduce production option(else_stmt) -> 
-- On T_return reduce production option(else_stmt) -> 
-- On T_left_br reduce production option(else_stmt) -> 
-- On T_if reduce production option(else_stmt) -> 
-- On T_identifier reduce production option(else_stmt) -> 

State 130:
else_stmt -> T_else . stmt [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while shift to state 61
-- On T_string shift to state 62
-- On T_semicolon shift to state 122
-- On T_return shift to state 123
-- On T_left_br shift to state 60
-- On T_if shift to state 127
-- On T_identifier shift to state 67
-- On stmt shift to state 131
-- On l_value shift to state 132
-- On func_call shift to state 136
-- On block shift to state 138

State 131:
else_stmt -> T_else stmt . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production else_stmt -> T_else stmt 
-- On T_string reduce production else_stmt -> T_else stmt 
-- On T_semicolon reduce production else_stmt -> T_else stmt 
-- On T_right_br reduce production else_stmt -> T_else stmt 
-- On T_return reduce production else_stmt -> T_else stmt 
-- On T_left_br reduce production else_stmt -> T_else stmt 
-- On T_if reduce production else_stmt -> T_else stmt 
-- On T_identifier reduce production else_stmt -> T_else stmt 

State 132:
l_value -> l_value . T_left_sqr expr T_right_sqr [ T_left_sqr T_assignment ]
stmt -> l_value . T_assignment expr T_semicolon [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_left_sqr shift to state 73
-- On T_assignment shift to state 133

State 133:
stmt -> l_value T_assignment . expr T_semicolon [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_string shift to state 62
-- On T_plus shift to state 63
-- On T_minus shift to state 64
-- On T_left_par shift to state 65
-- On T_integer shift to state 66
-- On T_identifier shift to state 67
-- On T_chr shift to state 69
-- On l_value shift to state 72
-- On func_call shift to state 74
-- On expr shift to state 134

State 134:
expr -> expr . T_plus expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_semicolon T_plus T_mul T_mod T_minus T_div ]
stmt -> l_value T_assignment expr . T_semicolon [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_semicolon shift to state 135
-- On T_plus shift to state 77
-- On T_mul shift to state 79
-- On T_mod shift to state 81
-- On T_minus shift to state 85
-- On T_div shift to state 83

State 135:
stmt -> l_value T_assignment expr T_semicolon . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production stmt -> l_value T_assignment expr T_semicolon 
-- On T_string reduce production stmt -> l_value T_assignment expr T_semicolon 
-- On T_semicolon reduce production stmt -> l_value T_assignment expr T_semicolon 
-- On T_right_br reduce production stmt -> l_value T_assignment expr T_semicolon 
-- On T_return reduce production stmt -> l_value T_assignment expr T_semicolon 
-- On T_left_br reduce production stmt -> l_value T_assignment expr T_semicolon 
-- On T_if reduce production stmt -> l_value T_assignment expr T_semicolon 
-- On T_identifier reduce production stmt -> l_value T_assignment expr T_semicolon 

State 136:
stmt -> func_call . T_semicolon [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_semicolon shift to state 137

State 137:
stmt -> func_call T_semicolon . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production stmt -> func_call T_semicolon 
-- On T_string reduce production stmt -> func_call T_semicolon 
-- On T_semicolon reduce production stmt -> func_call T_semicolon 
-- On T_right_br reduce production stmt -> func_call T_semicolon 
-- On T_return reduce production stmt -> func_call T_semicolon 
-- On T_left_br reduce production stmt -> func_call T_semicolon 
-- On T_if reduce production stmt -> func_call T_semicolon 
-- On T_identifier reduce production stmt -> func_call T_semicolon 

State 138:
stmt -> block . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production stmt -> block 
-- On T_string reduce production stmt -> block 
-- On T_semicolon reduce production stmt -> block 
-- On T_right_br reduce production stmt -> block 
-- On T_return reduce production stmt -> block 
-- On T_left_br reduce production stmt -> block 
-- On T_if reduce production stmt -> block 
-- On T_identifier reduce production stmt -> block 

State 139:
stmt -> T_if cond T_then option(else_stmt) . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production stmt -> T_if cond T_then option(else_stmt) 
-- On T_string reduce production stmt -> T_if cond T_then option(else_stmt) 
-- On T_semicolon reduce production stmt -> T_if cond T_then option(else_stmt) 
-- On T_right_br reduce production stmt -> T_if cond T_then option(else_stmt) 
-- On T_return reduce production stmt -> T_if cond T_then option(else_stmt) 
-- On T_left_br reduce production stmt -> T_if cond T_then option(else_stmt) 
-- On T_if reduce production stmt -> T_if cond T_then option(else_stmt) 
-- On T_identifier reduce production stmt -> T_if cond T_then option(else_stmt) 

State 140:
option(else_stmt) -> else_stmt . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production option(else_stmt) -> else_stmt 
-- On T_string reduce production option(else_stmt) -> else_stmt 
-- On T_semicolon reduce production option(else_stmt) -> else_stmt 
-- On T_right_br reduce production option(else_stmt) -> else_stmt 
-- On T_return reduce production option(else_stmt) -> else_stmt 
-- On T_left_br reduce production option(else_stmt) -> else_stmt 
-- On T_if reduce production option(else_stmt) -> else_stmt 
-- On T_identifier reduce production option(else_stmt) -> else_stmt 

State 141:
stmt -> T_while cond T_do stmt . [ T_while T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier ]
-- On T_while reduce production stmt -> T_while cond T_do stmt 
-- On T_string reduce production stmt -> T_while cond T_do stmt 
-- On T_semicolon reduce production stmt -> T_while cond T_do stmt 
-- On T_right_br reduce production stmt -> T_while cond T_do stmt 
-- On T_return reduce production stmt -> T_while cond T_do stmt 
-- On T_left_br reduce production stmt -> T_while cond T_do stmt 
-- On T_if reduce production stmt -> T_while cond T_do stmt 
-- On T_identifier reduce production stmt -> T_while cond T_do stmt 

State 142:
list(stmt) -> stmt . list(stmt) [ T_right_br ]
-- On T_while shift to state 61
-- On T_string shift to state 62
-- On T_semicolon shift to state 122
-- On T_return shift to state 123
-- On T_left_br shift to state 60
-- On T_if shift to state 127
-- On T_identifier shift to state 67
-- On stmt shift to state 142
-- On list(stmt) shift to state 143
-- On l_value shift to state 132
-- On func_call shift to state 136
-- On block shift to state 138
-- On T_right_br reduce production list(stmt) -> 

State 143:
list(stmt) -> stmt list(stmt) . [ T_right_br ]
-- On T_right_br reduce production list(stmt) -> stmt list(stmt) 

State 144:
block -> T_left_br list(stmt) . T_right_br [ T_while T_var T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier T_fun T_eof ]
-- On T_right_br shift to state 145

State 145:
block -> T_left_br list(stmt) T_right_br . [ T_while T_var T_string T_semicolon T_right_br T_return T_left_br T_if T_identifier T_fun T_eof ]
-- On T_while reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_var reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_string reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_semicolon reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_right_br reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_return reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_left_br reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_if reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_identifier reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_fun reduce production block -> T_left_br list(stmt) T_right_br 
-- On T_eof reduce production block -> T_left_br list(stmt) T_right_br 

State 146:
func_def -> header list(local_def) block . [ T_var T_left_br T_fun T_eof ]
-- On T_var reduce production func_def -> header list(local_def) block 
-- On T_left_br reduce production func_def -> header list(local_def) block 
-- On T_fun reduce production func_def -> header list(local_def) block 
-- On T_eof reduce production func_def -> header list(local_def) block 

State 147:
local_def -> func_def . [ T_var T_left_br T_fun ]
-- On T_var reduce production local_def -> func_def 
-- On T_left_br reduce production local_def -> func_def 
-- On T_fun reduce production local_def -> func_def 

State 148:
local_def -> func_decl . [ T_var T_left_br T_fun ]
-- On T_var reduce production local_def -> func_decl 
-- On T_left_br reduce production local_def -> func_decl 
-- On T_fun reduce production local_def -> func_decl 

State 149:
program -> func_def . T_eof [ # ]
-- On T_eof shift to state 150

State 150:
program -> func_def T_eof . [ # ]
-- On # reduce production program -> func_def T_eof 

