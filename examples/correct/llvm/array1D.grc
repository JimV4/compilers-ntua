fun main() : nothing
  fun sum(ref arr : int[17]) : int var i, result : int; {
    result <- 0; i <- 0;
    while i < 17 do {
      result <- result + arr[i];
      i <- i + 1; }
    return result; }
  fun printArray(size : int; ref arr : int[]) : nothing var i : int; {
    writeInteger(arr[0]);
    i <- 1;
    while i < size do {
      writeChar(' ');
      writeInteger(arr[i]);
      i <- i + 1;
    } }
  fun swap (ref x, y : int) : nothing var t : int; { t <- x; x <- y; y <- t; }
  var a : int[17]; var test_phrase : char[50]; var i, test_cntr : int;
  fun printHeader() : nothing {
    test_cntr <- test_cntr + 1; if test_cntr # 0 then writeChar('\n');
    writeString("---- Test "); writeInteger(test_cntr); writeString(" ----\n"); }
  fun initializeArray() : nothing {
    i <- 0;
    while i < 17 do {
      if i mod 2 = 0 then a[i] <- 1;
      else                a[i] <- -1;
      i <- i + 1;
    } }
{ $ main
  test_cntr <- -1;
  $ printHeader();
  $ i <- 0;
  $ while i < 17 do {
  $   writeString("a["); writeInteger(i); writeString("] is at\t");
  $   writeAddress(a[i]); writeString(".\n");
  $   i <- i + 1;
  $ }
  $ writeString("Addressing array elements works.\n");

  printHeader();
  writeString("The first character of the string \"Computer\" is \'");
  writeChar("Computer"[0]);
  writeString("\'.\n");
  writeString("Composite l-values of string literals work.\n");

  printHeader();
  writeString("Ascii value of character \'*\' (42) will be stored in a[1]...");
  a[1] <- ascii('*'); $ 42
  writeString(" Stored!\n");
  writeString("Assigning values to array elements work.\n");

  printHeader();
  writeString("a[1] contains the value ");
  writeInteger(a[1]);
  writeString(".\n");
  writeString("Evaluating composite l-values work.\n");

  printHeader();
  writeString("The string \"cat\" has length of ");
  writeInteger(strlen("cat"));
  writeString(".\n");
  writeString("Computing string length with strlen std lib func works.\n");

  printHeader();
  test_phrase[0] <- '0'; test_phrase[1] <- '1'; test_phrase[2] <- '\0';
  writeString("The string ");
  writeString(test_phrase);
  writeString(" has length of ");
  writeInteger(strlen(test_phrase));
  writeString(".\n");

  printHeader();
  strcpy(test_phrase, "Hello world!");
  writeString("The first character of \"");
  writeString(test_phrase);
  writeString("\" is \'");
  writeChar(test_phrase[0]);
  writeString("\'.\n");
  writeString("The first character of \"");
  writeString(test_phrase);
  writeString("\" is \'");
  writeChar("Hello world!"[0]);
  writeString("\'.\n");

  printHeader();
  initializeArray();
  writeString("The sum of the array a is ");
  writeInteger(sum(a)); $ 1
  writeString(".\n");
  writeString("Array parameter of fixed-sized arrays works.\n");

  printHeader();
  writeString("Array a contains the following elements:\n\t");
  printArray(17, a);
  writeString("\n");
  writeString("Array parameter of unfixed-sized arrays works.\n");

  printHeader();
  a[5] <- 7;
  a[6] <- 8;
  writeString("a[5] is ");
  writeInteger(7);
  writeString(" and a[6] is ");
  writeInteger(8);
  writeString(".\n");
  writeString("Performing swap...");
  swap(a[5], a[6]);
  writeString("Done.\n");
  writeString("a[5] is ");
  writeInteger(a[5]);
  writeString(" and a[6] is ");
  writeInteger(a[6]);
  writeString(".\n");
  writeString("Passing an array element by reference works.\n");
}
