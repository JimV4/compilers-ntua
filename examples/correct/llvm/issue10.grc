fun main() : nothing
  var x : int;
  var count : int;
  fun sub(a, b : int) : int { return a - b; }
  fun add(a, b : int) : int
    fun incr(ref n : int) : nothing
    { n <- add(n, 1); }
    fun decr(ref n : int) : nothing
    { n <- sub(n, 1); }
  {
    if a = 0 then return b;
    else {
      count <- count + 1;
      return add(a - 1, b + 1);
    }
  }
  fun increment (ref x : int) : nothing
  { x <- add(x, 1); }

  fun a(switch : int) : nothing
    fun print(ref msg : char[]) : nothing
    { writeString(msg); writeChar('\n'); }
    fun b(n : int) : nothing
    { print("Hello!"); if n > 0 then a(n - 1); else a ( n + 1); }
  {
    if switch # 0 then b(switch);
    else print("Last message!");
  }

  var y : int;
{
  $ Function takes an integer n and greets n times.
  $ Prints a last message only once.
  a(1);
  count <- 0;
  y <- 2;
  x <- y;
  increment(x);
  writeInteger(x);
  writeString(" = ");
  writeInteger(y + 1);
  writeString("\nAll good\n");
  writeString("Function \'add\' was called ");
  writeInteger(count);
  writeString(" times.\nFunction \'add\' should be called 2 times.\n");
}
