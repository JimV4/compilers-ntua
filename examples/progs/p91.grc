fun foo() : char
fun bar(b, i : char[]; boo : char[]; ref f, boo, g : char[]) : nothing
var main, j, main : int;
var bar, main, b : int;
fun k(ref b, d, f : int[][25]; main, d : char[]) : nothing
fun h(x : int[][15][23]) : char
var m : char[18];
var boo, f : char;

{
  {
  return;
  while '7' = 37 do return;
}
  while '\n' < '\n' do return;
  while 'a' # 32 do if '\'' = 'a' then return 25; else if '7' # 'a' then {
  if 23 < 16 then {

} else ;
} else {
  return;
}
}

fun d(ref h, j, c : int[]; ref main : char[0]) : nothing
fun boo() : int;
fun h(ref y, y : int[19][3]; ref e, x, g : int[][28][26]; foo, j, k : int[]; y : int; ref bar, foo : char) : int
fun foo() : int
fun h(ref i, e, main : int[][2]; a : int; main, d, x : char) : char

{
  ;
  if 9 <= '7' then if 7 < '\'' then {
  ;
  return ('\'' mod 40);
} else ;
  while 20 > 0 do ;
  if '\n' = '\'' then return; else while 30 <= '\n' do while 36 # 'a' do ;
}


{
  return;
}

fun d() : char;

{
  "bar"['7'] <- - 32;
  if 17 > 20 then {
  while 13 >= 26 do {
  ;
  ;
  if 11 = '\'' then return; else {
  i();
}
}
  {
  if '\n' > '7' then "foo" <- 17;
  ;
}
  return;
  ;
} else return;
  while '7' = 31 do ;
  ;
}


{
  {
  {
  "bar"['a'] <- d(+ 'a');
  return d();
  if '\'' >= 12 then while 'a' > 'a' do "foo" <- 'a';
}
  i <- + '\n';
  while 6 >= '7' do if 1 <= 37 then ; else return;
  ;
  while '7' >= '\'' do d <- '\'';
}
  return;
  ;
  z((('\'')), - (((- '7') div (- '\''))), z[- '\'']);
  {
  while 36 > 'a' do {
  if '\n' <= 'a' then n(('\''), + 'a');
  return;
  {
  return - '\'';
  ;
}
  ;
  ;
}
}
}


{
  while 40 = '\n' do {

}
  while 11 # '7' do while 'a' >= '\n' do k <- '\'';
  {
  "foo" <- - '\'';
  i();
}
  ;
  while 41 = 'a' do ;
}


{

}


{
  while 'a' >= 16 do {
  ;
}
  return (10 - 19);
  ;
  ;
}
