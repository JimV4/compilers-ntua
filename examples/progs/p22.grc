fun g(a, z : char; b, baz : char[][22]; l, boo : int; ref g, y, l : char[]; n, l, main : char[32][35]) : int
fun b() : nothing
fun x() : int
fun main() : nothing
fun f(d, n, m : int[33]) : char
fun f(ref main, a, main : int; ref m, h, e : int[]) : int;
fun i(d : char[12]) : nothing
fun x(ref d, m, f : char; l, h, k : int[]) : nothing

{
  {

}
}

fun a(ref boo, i : int; h : char; ref f, f, m : int[42]; ref a, e, main : int) : char
fun a(e, d, y : char[]; bar, j : int[]) : nothing
fun baz(f : char[][22]; y : char[11]; ref i, g : char) : int;

{
  return foo;
  i(- n, ((z((29 * 42), ('7'), x)) - (('\n' * '\n'))));
  return x['7'];
}

var z : int;
fun l() : nothing
fun e(bar, e : int[]; bar, bar : int; x : int) : char
fun f() : nothing;

{
  {
  while '\'' = 'a' do y[9] <- 33;
  return;
  while '\n' # 'a' do while 32 > 3 do a(32, '7');
  bar['\n'] <- bar((31 div 29), y(z), "bar");
  y(((- '\n') - (('\''))), ((- 12) + ((6))), (l()));
}
  n(b, - (f()), + (+ ((23 - 'a'))));
}

fun a(i : char[5][23]; d, x, f : int[]; g, c : char[]; ref g, h : int[26][21]; i : char[33]) : nothing
fun x(ref baz : char; l, k, z : int[39]) : nothing;
fun y(i : char[]; foo : int[]; bar : char[13]) : nothing
fun m(ref j : char[]; ref d : char; ref l, e, i : int[][38]; c : int[][4]) : char
fun y(ref baz, y : int[4]; n : int) : nothing
fun g(ref f, c, x : int; ref main, c, z : char[][22]) : char
fun m(bar, n, m : char[][19][2]; i, y : int; ref foo, e, b : char[29][31]) : nothing
fun bar(x, g : int[]; h, e, l : char[]) : nothing;
var f, y : char[29];

{
  {
  b(j, (('\'' + '\'')));
  while '7' <= 'a' do f(l(), n);
  return (12 * 30);
  e();
  x <- "foo";
}
  return ('\n' div 0);
  return;
  g();
}

fun foo(n, foo, i : int[]; x, c, baz : char; bar : int; baz : int) : nothing
fun k(ref l, boo : int[][41]; ref h, n : int[]; b, a, k : char[38]; f, y, l : int[]; ref n, e, bar : int) : char
fun baz(h, x, e : int[2][39]) : nothing
fun d(bar, f : int[][31]) : nothing
fun n(ref g, a : char[]; i, x : int[][9]) : nothing;
fun m(ref c : int[][9]; c : char[]) : int
fun n(ref i, y : int[17]; ref n, b, bar : char; ref k, f : char) : nothing
fun g() : char
var b, e : int[25];

{
  {
  while '7' # '\'' do return;
}
  if '\'' < 8 then while 20 <= 35 do while '7' # 31 do while 'a' = '7' do {
  foo <- (6 div '\n');
} else {
  {
  while 23 < '\n' do bar <- 35;
  while '\n' # 18 do while '7' <= 19 do ;
  while '7' <= 38 do return;
}
  while '7' # 20 do foo <- 8;
  x(((26)));
  ;
}
  if 8 <= '7' then n((15 + 42), m(n(j(('\n' div 14), (40), + 32), (7), + 17)), (21)); else ;
  baz(boo(), ((15)));
}

var l, z, g : int;
var l : char[23];

{
  {
  while 22 > 1 do ;
  b(e(), ((('\'')) mod (('\''))), + (+ ((2 mod 8))));
  foo <- - '\n';
  return m;
  {
  g <- ('7' mod 9);
}
}
  while 7 >= 14 do {
  g();
  ;
  {
  j(main(((d(+ 38, z, + '\'')) - ((7 div 19))), n(- (k(- (('a')), - ((36))))), + (d(+ (+ (('a'))), ((12 mod '7'))))));
}
  {
  main <- g();
  if '\n' = 42 then bar <- 16;
  {
  if 'a' <= 20 then return;
  boo();
}
  f((b(baz, bar((10)))), (('7' div 'a')), + (((- '7') - (e['7']))));
}
  while '\'' > '7' do ;
}
  if '7' >= 0 then return; else while '\'' < '\'' do return '\n';
  while 8 >= 22 do {
  return;
  bar <- (19 mod '\n');
  if 7 <= 29 then g(a(('7')), l(- 17, + '7'), h(bar())); else g <- 'a';
  {
  return ('7');
  return (28 + '\n');
  {
  b <- g;
  c <- - 3;
  while 'a' >= 'a' do g(x);
  e <- ('a');
  x <- boo((23 div 5), j(+ 11), - '7');
}
}
}
}

fun k(ref e : char[10][33]; ref x : int; ref d : int[][19][3]; f, b, a : int[][15]) : int
fun y(g, f, d : int[]; ref k, i, f : char[]) : nothing
fun k(j : int[][27][7]; ref bar : int[]; z : char; a : char[10]; z : int[35][37]) : int

{
  e <- n(('\'' mod '\n'), ('7'));
}

fun e(ref j, bar, c : char[3]; ref i : int[]; ref a : int[]) : nothing
fun baz(ref l : int[][33]) : nothing
fun boo(ref a, h : char; k, m, j : char; z, foo, bar : char[13]) : int
fun i(y : char[][33]) : nothing
fun y(k, l, h : int[]; f, k, a : char; c, main : char[]; h, c : char; n, x : int[1][9]) : char;
fun boo(e, b, c : char[]; ref bar : int[26][34]; ref g, k : char[][35]; foo, foo : int[]; ref boo, a : int[][32]) : nothing;

{
  if '\'' >= 28 then while 4 # 17 do return; else return '\'';
  while 24 <= 33 do {
  z <- foo();
  c((- 15), ((18 * '\'')));
  "Route66" <- + '\n';
  while '7' > '7' do n(+ '\n');
  foo <- boo;
}
}


{
  if 'a' <= '\'' then ; else while '\n' # '7' do if '7' <= 20 then a <- '\''; else while 33 > 'a' do while 31 <= 20 do {
  if 23 # 28 then e <- 39; else {

}
  {
  {
  x <- bar;
  if 'a' < 'a' then ;
}
  if 'a' <= 38 then d(('a'), - '\n'); else while 38 <= '7' do ;
}
  return k;
  main[9] <- ('\n' - '\n');
  if '\n' # 'a' then if 9 >= '7' then ;
}
  "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- (35);
  {

}
  m(+ (c((((19 - '\n')) + "foo"))), ((c(a("bar", x(('a'))), bar(z(), ('\n'), h), ('a'))) mod (e())));
}

fun g() : char
fun x(ref baz, boo : char[][20]) : nothing
fun l() : nothing;

{
  c(x, + (- (c())));
}

fun g(ref k, baz, d : int[39]; baz, l : int[][39][10]; h : int[1]; ref boo, f, k : char[]) : char

{
  return a(+ 29, baz, baz((16), ('\n' * 'a'), ('\'' mod '7')));
  return;
  ;
  m <- + '7';
  if '7' < 24 then if 20 = 33 then if 'a' >= 8 then ; else if '7' >= 24 then while 16 # '7' do {
  {
  main((((25 - '\'')) mod "Route66"), (((1 - '7')) + (('\n' div '\''))));
  {

}
  return;
  if 'a' = 28 then {
  return;
  return "bar";
}
  while 9 = 'a' do ;
}
  x <- ('\n' + 13);
}
}

var j, f : char;

{
  return d;
  ;
  return ('7' + 'a');
}

fun c() : char
fun x(ref b : char[]) : char

{
  ;
  h <- - 8;
  ;
  ;
  ;
}

fun i(m : int; baz, k : int; ref baz : int[24]) : nothing
fun i() : int
fun k(ref foo : int; ref g : char[]; k : int[21]; z, a : int[][15]; c : int[]) : int;
fun h(x : char[4]; ref d : char[]; ref baz, j, main : char[][3]; ref boo, f, y : char[1]) : int

{
  while 32 > 34 do ;
  if 31 < 12 then ; else {
  while 18 >= 6 do while 36 > '7' do b();
  "foo" <- (11);
  return - '\'';
}
  return (13);
}

fun y() : nothing
var a, boo : int[27][25];

{
  ;
  g((h - ((37 div 8))));
}


{
  if 'a' # 21 then return; else return '\'';
  ;
  {
  k((('a')), ((m((3), c)) - (g((27), e(), ('\'' * 34)))));
}
}


{
  ;
  e((k(e((34), ('\''), b(d(k(e, l(), ('a' + '7')), d))), ('\n' * '\''), + 39)));
  "foo" <- + 'a';
}


{
  if 'a' >= '\'' then if 27 <= '7' then m['a'] <- '\''; else {
  x <- + 23;
}
  while 'a' # 2 do return;
}


{
  if '\n' > 30 then return 23;
}


{
  if '\n' <= '\'' then y <- 3;
  h();
  h <- f(foo());
  h <- i;
  ;
}


{
  while 39 <= 22 do b(z(j, baz(('\'' mod 18), (14))), m(+ 5, ('7')));
  {
  ;
  if '\n' # 'a' then while 4 < '\n' do {

} else while 11 <= '7' do b();
  {
  {
  ;
}
}
  d <- (41 - '\n');
}
  z <- "Route66";
  return;
  ;
}

fun main(j : char[40][17]; ref j : char[17]; ref main, foo, b : int[]) : nothing

{
  n <- ('a');
  {

}
  n <- (17);
}


{
  return j();
  return (1 mod 18);
  return (5);
  if '7' # '\'' then baz(x); else while '\n' = '7' do ;
}


{
  {
  f(((20)), c);
  h();
  boo['\n'] <- ('7' mod 12);
  i <- main;
}
}

fun x(ref x : char; b, l, d : char[]; ref f, g : char[]; ref x, i : char[][12]) : nothing
fun e(baz, g : int; c, y, m : int[7]; ref i : int; ref baz, i, baz : int[][42]) : int
fun x(ref k, f : int[33]; baz, k, main : char; ref x, n : int; ref n : int[]; ref e, main : int) : int;

{
  {

}
  ;
  return + '\'';
}


{
  if '\'' > '\'' then return 14; else return 13;
  ;
  {
  if 'a' < 22 then {

}
  if 15 < '7' then return;
  {
  {
  ;
}
  y <- (34 div '7');
  while 31 >= 2 do c <- '7';
  n();
}
  return;
}
  return;
  n <- - '\'';
}


{
  {
  ;
  l(((27)), ((+ '7') * ((1))));
}
}

var n : char;
fun y(ref a, z : char; e, n, i : int) : int
var l, z, foo : int[13][3];
var main, baz : int;
var baz, d : char;

{
  if 7 <= 7 then {
  k(j(), - "foo", + (main()));
}
  {
  return i(+ '\n', i(+ 'a', - 16, d), z);
}
  {
  {
  "Route66" <- k(+ 0, x(- 18));
  {
  while 'a' <= 15 do while 24 = '\'' do return '\'';
  if '\n' <= 12 then main(g['7']);
  return;
  return ('7');
  d <- (22 - '\n');
}
  if 'a' < '\'' then ;
}
  {

}
}
  b();
  "Route66" <- + '7';
}


{
  j <- e();
}

fun b(ref foo : int[][10]; foo : char[]; c : int[][27]; ref m, l : int; ref bar : int[][5]) : int

{
  while '\'' < 'a' do while '7' >= '\n' do return;
  ;
  if 23 = '\'' then while 41 >= 39 do while 23 > 42 do while '7' = '7' do n(30); else return 41;
}

fun c(ref y : char[]; e, x : int[][41]; h : char[25]) : nothing
fun j(c, g, d : char[][28]) : nothing

{
  if 42 <= 4 then return '\n';
}

var k, z, baz : char[40];

{
  while 17 < 'a' do k(m(), - 'a');
  ;
  if 'a' = 'a' then while 30 < '7' do ;
}


{
  j[34] <- ('\'' + 'a');
}

fun z(ref boo, d, foo : int[23]; c : char) : char
fun j(ref boo, c : char[]) : nothing;

{
  ;
  if '7' >= 27 then ; else h();
  k(boo);
  {
  if 2 <= '\'' then d <- '7';
  "bar" <- + '7';
  ;
}
  if '\'' > 36 then while '\n' <= '7' do {

}
}


{
  if 6 >= '\'' then x <- 14;
  e <- a(('\''), d((30), "bar"), (28 mod 17));
  boo <- - 41;
  while '\'' # 'a' do if 8 <= 9 then if '7' <= '\'' then {
  ;
  while 'a' <= '\n' do ;
} else {
  return;
  main((b));
  if 9 < 36 then if 25 = 23 then baz <- '\''; else {
  j(((e(('\''))) mod ((27 + 5))), boo, + ((((27 * 1)) + (boo(+ 5, a(('a')))))));
  ;
  m <- + '\'';
  ;
  if '\n' > 4 then if 8 # 'a' then while 15 > 21 do if '7' <= '\n' then "Name:\t\"DouglasAdams\"\nValue:\t42\n"['7'] <- '\''; else z(40); else foo <- '\n';
}
}
  {
  if 'a' # 29 then return; else {
  return;
  if '7' < 'a' then baz(); else ;
  if 24 > '\n' then if 8 >= 9 then {
  {
  if 28 = 'a' then while '\'' < '\n' do if '7' > 28 then while '\n' <= '\'' do return '7'; else m(('a'));
}
  if 12 # '\n' then x();
} else {
  ;
  {
  if '\n' # 28 then if 17 >= '\n' then {
  e <- - 18;
  while 36 > 33 do if 'a' < 'a' then while 0 <= '\n' do ; else ;
  while '\n' <= '7' do ;
} else return;
  while 'a' > '\n' do m(- 11, boo(('a'), ('\n')), a);
  baz <- - 'a';
  ;
  foo(bar, ((main(x(), (10))) mod (+ 25)));
}
  return h;
  ;
}
}
  b <- (40);
}
}


{
  y(((('\n')) * (('7'))));
  if 36 > '7' then if 14 # '\n' then while 'a' # '\n' do j('\n'); else while 20 # 36 do while '7' < '\'' do ; else e(('7'), (19), - 22);
  {
  boo <- (42);
}
}

fun l(ref x : char[]) : int;
fun g(ref l : int[]; ref bar : int[32]; ref z : int[10]; ref e : int[][4]) : nothing;

{
  x(+ (((('\'')) mod (('a' + 10)))), + (+ ((33 div '7'))));
}


{
  if 26 < 1 then if 1 = 8 then foo('\n'); else return 21;
  ;
}

fun e(ref y, b, z : char[41]; ref k : int[16]) : nothing
var b : int[25];

{

}


{
  while 3 > 18 do while 'a' < '7' do return 34;
  ;
}

fun baz(baz, z : int; ref l, h, i : int; k, baz, bar : char[]) : nothing
fun c(z : char) : char
var n, e, baz : int;

{
  while '\'' <= 14 do {
  while '\'' >= 27 do {

}
  ;
  {
  x(+ (c()));
  {

}
  "bar" <- a;
  return ('7');
}
}
  while 'a' # 17 do if 6 < 23 then if 'a' >= 'a' then if '7' # 9 then if 41 # '\n' then return; else return; else ;
  return ('\'' - 5);
  while 10 >= 'a' do bar <- 7;
  d((((15)) + (main())));
}

fun baz(ref z, h : int; k, bar : int; ref i, g, n : char) : nothing;
var h, y : int;

{
  n <- ('\n');
}


{
  {
  if '7' > '7' then {
  {
  while 31 = 6 do if '7' = 34 then return 'a'; else if '\n' # 15 then ; else ;
  boo <- (42 - 10);
  if '\n' # 2 then return; else ;
  while 7 # 11 do {
  baz(n(), ((h(- '7', ('\'' * 'a'))) div (('7'))));
}
}
  {
  while 10 > '\'' do if 18 <= '\n' then return 19; else h <- 5;
  while 34 > '7' do c(('\n'));
  ;
  k(- ((((17 * 7)) - "Name:\t\"DouglasAdams\"\nValue:\t42\n")));
}
} else main(- '\'');
  {
  g(d, ((+ 28) * (+ 10)), ((('a')) * (('\'' - '\n'))));
  while '\n' # 17 do l(+ '7', baz(), - '\'');
}
  ;
  while 'a' <= '7' do if '\n' # 30 then while '\'' # 10 do while 0 <= '\n' do ;
  f((i(- 'a', k((24)), - '7')), baz);
}
  return x;
}


{
  {
  {
  return ('\'' div 11);
  {
  {
  if 34 >= 20 then return;
  return ('\n' - '7');
}
  h(e((('a' + 'a'))), (y), d);
  while '\'' # 13 do if 12 < 9 then baz('7'); else while 13 > 9 do return 29;
}
  while 36 < 37 do while '\n' <= '\'' do ;
  while 29 <= 'a' do ;
  {
  while '\n' = '\n' do return;
  if 30 < 'a' then c[26] <- 3; else ;
  ;
}
}
  return;
  return bar;
  if '7' = 17 then return; else while 26 = 24 do if 32 # '\'' then return '\'';
  y();
}
  while '\'' <= '\'' do if 'a' <= 27 then if '\n' > 35 then ; else ; else a <- 11;
}


{
  {
  a[41] <- (14 * 24);
  j <- i;
}
  x((('a')), ((- 'a') mod (('\''))));
}

fun l() : int
fun baz(ref a, b, m : int; baz : char[][9]; ref i, k, bar : char[24]) : nothing
fun i(c : char; c, l : char[][38]; k, g, d : int[30]) : nothing
fun f(z, f : int[]; y, b : int[24]) : nothing
var bar, f : char;
var m : char;
fun j(a, c : char[21][25]) : char
fun boo(ref z : int[][0]; ref g : char[][28][25]; e, main, bar : int; ref g : char) : int;
var main, i : int;

{
  {

}
  return;
  ;
  if 26 < 20 then i <- '7';
  ;
}


{
  return (18);
  while 15 = 'a' do if '\'' = 13 then bar(); else return 24;
}

fun baz(b, k, z : char[12]; k, m : char[5]) : nothing
var k, h, n : int;

{

}


{

}

var m : int;
fun bar(boo, g, z : char[]) : char;

{
  m <- ('7' div '7');
  j();
}


{
  e(d);
  {
  if '7' <= 35 then ; else {
  while 'a' >= 9 do ;
  foo <- d;
  b <- j[6];
  return ('\n');
}
  ;
}
  "Route66" <- ('\n');
}


{
  while '7' = '7' do c();
  {
  c <- - '\n';
  {
  l <- f;
}
}
  ;
}


{
  {
  e <- (33 * 'a');
  return;
  while '\n' # 30 do ;
}
}

fun bar(ref j, g : int[10]; ref e, i : int[4][40]; m, z : char[][18]; ref n : int[][42]) : nothing;

{
  if 18 > 35 then {
  main['a'] <- ('\n');
  if 'a' <= '\n' then ;
}
  bar();
  ;
  return "Route66";
  if 'a' > 38 then return 2;
}


{
  {
  foo <- c(b(('7'), m, - 27), b(), (37));
  m <- - 16;
}
  ;
  g <- j;
  bar <- (22);
}


{
  {

}
  if '\n' >= '7' then main(+ 'a', (21 + '7'), - 35);
}

fun l(f : char[][1]; baz, i : char; main, l, m : char[40]; e : int) : char
var main : char;
var c : char[16];

{
  baz[14] <- foo;
  if '7' # '7' then if '\n' >= 29 then foo('\n', '\''); else while 7 < 'a' do ; else return 31;
  "foo" <- - 14;
  bar <- j((13 mod 20), g(('7' * 32), h));
  y(h(k(- ((+ '7')), k)), ((- 35) mod (+ 'a')), k(- ((('7'))), - (((a(('\n' mod 9), ('\n'))) - (boo(('7'), + '\n'))))));
}

fun boo(ref d : int[7]; l : char[32]; e, n : char[]) : char

{
  ;
  {
  main <- k;
  if 'a' <= 30 then while '\'' < 12 do return; else while 5 <= 'a' do f(30, '\'', 'a');
  if 18 # '\n' then return; else while '\n' >= '7' do while 35 = 32 do g(0, 23);
  ;
}
  if 31 < 1 then main <- 16;
}


{
  {
  x <- j(+ '\'', (33));
  n <- j;
}
  return - 'a';
}
