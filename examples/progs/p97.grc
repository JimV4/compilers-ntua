fun a(ref n, m, e : char[][32]; ref y, j, bar : char; n : int[]; ref z : char[]; ref h : int[]) : int
fun k(j, k : int) : char
fun f(ref l, d, y : int[]; main : char; ref m, j, y : char) : char

{
  {
  return baz("bar");
  return;
  "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- + '\'';
  while 16 >= 6 do while 'a' # '7' do ;
}
}

fun g(c, y, y : int[10]; ref bar : char[]; ref g : int[][37]) : nothing
fun boo() : nothing

{

}


{
  if 41 >= 31 then return; else if 23 > 15 then {
  e <- - '\n';
  h((((10)) * f), (+ 'a'), ((- '\n') - ((27))));
} else if '7' = 32 then {

}
}

fun m() : char
var h, f, c : int;
fun y(l, g, x : int[]; ref d, g : char[26][9]; ref i, boo, i : char; ref y, b, i : int[]; ref l, b : char[12]) : char
fun h() : char;

{
  return;
  i((boo(foo, c, h((4)))), a, - bar);
  i(c(), + (b(y(+ (('7'))))));
}

fun c(g, m, k : int[]; ref c : char[][8]; ref main, b : int) : char;

{
  n <- (33 * 'a');
  if '\'' < 'a' then y[22] <- 'a'; else e("foo", (9), x);
}


{

}

fun main(ref f : char) : int
fun h() : nothing
fun g(main : char[][17]; foo : int; i, i, boo : int[]; h : int[]) : int
fun l(ref g : int[][4]; n, y : int; ref k, bar : char[]) : nothing
fun c(ref i, boo, baz : char[22]; ref z, baz : int[]) : nothing
fun k() : nothing
fun foo(g, e : char[]; ref a, c, bar : int[][41]; ref b, boo, baz : char; ref foo : char[22]) : int;
fun x(n, g, j : int[][25]; ref x : int) : char

{
  while '7' > '7' do b <- 'a';
  while 23 = '7' do {
  return e(('7' mod 26), (7 + 'a'), x['\n']);
  if '\'' > 'a' then return; else {
  l(- ((n((41)))));
  {
  return;
  if 42 > 7 then while 'a' # '\n' do while '\'' < '\n' do foo <- 34;
}
  k((x((16 div '\n'), ('a'), (37 mod '\''))), ((('\n' mod 2)) * (x[31])));
  return;
}
  return x((34), ('7'));
  b <- ('7');
}
  return;
  {
  if '\n' > 15 then if 1 = 31 then if 12 # '\n' then ; else if 13 <= 16 then g('a', '7', 16); else d <- 13; else ;
  ;
}
}

var y : int;

{
  ;
  return e();
  "bar"[11] <- + 6;
  ;
}


{
  if 3 # 42 then ; else {
  {
  if 39 >= 33 then d <- 'a'; else if 'a' < 5 then ; else h <- 'a';
}
  while '\n' > '7' do while 7 >= 41 do ;
  if 42 < 35 then return '\'';
  return n(+ 5, (10));
}
  {
  e();
  k[24] <- - 27;
  b(e(baz, bar, (('\'' + '\''))), (b));
  main <- bar;
}
  ;
}

fun h(ref m, y, m : int[25]; i : int[]; baz : int[]; boo, b : char) : int;

{
  while 22 >= 10 do if '\n' <= '\n' then b <- 'a';
  {
  return z();
  i <- ('\'');
  c <- b(n, - 7);
}
  return;
  while '\n' >= 19 do while '\n' < '\n' do if 'a' > '7' then "Route66" <- '7';
  if '7' < 'a' then d['\n'] <- '\n'; else if 30 = 11 then if '7' <= '\'' then {
  m[21][37] <- (42 - '\n');
} else if 'a' # '\n' then "bar" <- 'a';
}


{
  if '\n' <= 11 then boo <- 'a'; else if 21 = '\'' then return 26; else ;
  ;
  ;
  "Route66" <- m(- '\n', ('a'), ('7'));
  ;
}


{
  {
  ;
  f((c));
  if 32 <= 34 then if 'a' > 25 then g('\n', 26, 6);
}
  return;
}

fun b() : char
fun i(f, l, e : char[39]) : nothing;

{
  g <- + 23;
  if 14 < 'a' then foo(- '\'', (3), - 'a');
  {
  if 'a' = 32 then if 'a' # '7' then if 19 # 32 then l <- '7'; else x <- '\'';
  return main(g((4 - 'a'), d), - 8, + 38);
  if 28 < 22 then bar <- 4;
}
  {
  while '\n' <= 28 do n(('\n' + 19), b);
  while 20 > '\'' do e <- '7';
  h <- k(('7' div 39));
  z <- bar();
}
  if 42 = '\n' then {
  return "bar"[6];
  if '7' > 'a' then if 13 < '\'' then if '7' > 10 then if '\'' # 26 then while '\'' # '7' do {
  {
  while 29 # 30 do ;
  return;
  {
  c <- (31 + 16);
  ;
  if '\n' > '\'' then h();
  z <- - '\n';
}
}
  {
  foo <- c;
}
} else l <- '\'';
  y();
} else e();
}


{
  while 'a' # 29 do return;
}

var baz : char[23];

{
  e(((('7' mod '\'')) mod (('\n'))), + (i()), (main(('7'))));
  b((- '\''), + "foo", ((e()) div (z(('7'), - '7', + 13))));
}
