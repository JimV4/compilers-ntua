fun x(a, d, j : char; ref i : int[][39]; ref f : int[][6]; y, h, c : int[30][38]; x, main : char[]) : nothing
fun m(ref foo : char[][4][6]; c, m, f : int[29][28]; bar : int) : char

{
  c <- l;
}

fun d(e : char) : int
fun k(l, foo, h : char; j, b : int[]; i, i, baz : char[]; ref y : char; i, k : char) : nothing

{
  ;
  while '\n' <= 8 do if 6 # 23 then m['a'] <- '\'';
  {
  {
  ;
  {
  c <- ('\n');
  bar['a'] <- (39);
}
  {

}
}
  j(+ ((+ 16)));
}
  while 40 > 6 do h((22));
  if 24 = 'a' then e(a[22], (27 div 9), (5 div '\n'));
}

fun l(g, z : int[][26]; ref baz, a : char[][8][14]; ref j, baz : int[][26]; ref boo, a : int[]) : nothing
fun baz(ref l, k : char[36]; m : char[]; ref boo : char[][22][30]; n : char[][7]) : nothing;

{
  "bar" <- (21 mod '\n');
  {
  return "bar"[36];
  c(foo(+ (- ((6 mod 'a'))), "bar"));
}
  bar();
  {
  e((+ '\''), - (- (z(('\n'), ('7' mod 39), - (- 25)))));
}
}


{
  while 33 >= 'a' do while 11 < '7' do l['\''] <- 14;
  return (8);
  {
  g <- m;
  while 39 = '\n' do while '\'' = 8 do ;
  l <- foo((4), (26), + 11);
  foo((main));
}
  while '\'' # '\'' do d <- '\'';
  {
  while 37 > '7' do ;
  return main((26), + 10, - 6);
  ;
  e <- k[10];
  if '\n' >= 21 then if 'a' # 40 then while '\n' # 27 do if '\'' # 14 then return; else return; else ;
}
}

fun d(i : int[][5]; ref b, f, l : char[]; main, x, boo : char; k : int[]; x, x, d : char) : nothing

{
  if 7 <= 18 then "Route66" <- 33; else while 22 < 9 do {

}
  {

}
  z(b(+ (- g)), j(((('7')) mod ((30 + '\n')))));
}


{
  if 0 > 34 then return; else {
  if 38 >= 'a' then ;
  while 3 <= '7' do z(- 25);
  ;
}
  return;
  {

}
  return;
  h();
}
